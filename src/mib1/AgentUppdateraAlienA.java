/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib1;

import javax.swing.JOptionPane;
import oru.inf.InfDB;

/**
 *
 * @author Jesper
 */
public class AgentUppdateraAlienA extends javax.swing.JFrame {

    private static InfDB idb;

    static String getAlienNamn1() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * Creates new form AgentUppdateraAlien
     */
    public AgentUppdateraAlienA(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUpdAlien = new javax.swing.JLabel();
        lblAlien = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        okBTN = new javax.swing.JButton();
        tbxBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUpdAlien.setText("Uppdatera Alien");

        lblAlien.setText("Vilket namn har alien du vill uppdatera?");

        txtNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamnActionPerformed(evt);
            }
        });

        okBTN.setText("OK");
        okBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBTNActionPerformed(evt);
            }
        });

        tbxBTN.setText("Tillbaka");
        tbxBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUpdAlien)
                            .addComponent(lblAlien)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(okBTN))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(tbxBTN)))
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUpdAlien)
                .addGap(48, 48, 48)
                .addComponent(lblAlien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(okBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addComponent(tbxBTN)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamnActionPerformed

    // Metod för att instansiera AgentUppdateraAlienB-klassen.
    private void okBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBTNActionPerformed
        if (valideringsklass.tomtFalt(txtNamn)) {
            new AgentUppdateraAlienB(idb, getAlienNamn()).setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_okBTNActionPerformed

    private void tbxBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxBTNActionPerformed
               // TODO add your handling code here:
          String test = huvudFonster.hamtaAnvandare();
        //om agenten är admin så kommer man till adminsidan via knappen annars så kommer man till vanliga agentsidan
        try{
            //String namn = idb.fetchSingle("Select namn from agent where namn = " + "'" + test + "'");
            // Här hämtar den id på den inloggade agenten
            String id = idb.fetchSingle("Select agent_id from agent where namn = " + "'" + test + "'");
            // Konverterar till int
            int convertId = Integer.parseInt(id);
            //If agenten är admin 
            String om = idb.fetchSingle("select agent.ADMINISTRATOR from agent where agent_id = " + "'" + convertId +"'");
            //Om villkorret uppfylls(en agent är admin om det står J i administrator kolumnen)
            if(om.equals("J")){
                AdminFonster tbxAdmin = new AdminFonster(idb);
                tbxAdmin.setVisible(true);
                this.dispose();
            }
            // Annars är det vanliga agentsidan man kommer till
            else{
                AgentInloggad1 tbx = new AgentInloggad1(idb);
                tbx.setVisible(true);
                this.dispose();
                 
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tbxBTNActionPerformed

    /**
     * @param args the command line arguments
     */
   
    
        
//Publik metod som gör att AgentUppdateraAlienB-klassen kan hämta Alien-ID.
    
    public String getAlienNamn() {
        return txtNamn.getText();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAlien;
    private javax.swing.JLabel lblUpdAlien;
    private javax.swing.JButton okBTN;
    private javax.swing.JButton tbxBTN;
    private javax.swing.JTextField txtNamn;
    // End of variables declaration//GEN-END:variables
}
