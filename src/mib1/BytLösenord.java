/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mib1;

import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author KarlJ
 */
public class BytLösenord extends javax.swing.JFrame {
    private static InfDB idb;
    /**
     * Creates new form BytLösenord
     */
    public BytLösenord(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordnew = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        bytlösenordBTN = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        oldpassword = new javax.swing.JPasswordField();
        tbxBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Skriv in nytt lösenord");

        bytlösenordBTN.setText("Byt Lösenord");
        bytlösenordBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bytlösenordBTNActionPerformed(evt);
            }
        });

        jLabel2.setText("Skriv in ditt gamla lösenord");

        tbxBTN.setText("Tillbaka");
        tbxBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordnew)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bytlösenordBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(oldpassword)
                    .addComponent(tbxBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(147, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordnew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bytlösenordBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbxBTN)
                .addContainerGap(97, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bytlösenordBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bytlösenordBTNActionPerformed
        // TODO add your handling code here:
        String oldpass = oldpassword.getText();
        String pass = passwordnew.getText();
        if (valideringsklass.tomtFalt(oldpassword) && valideringsklass.tomtFalt(passwordnew)) {
            try {
                String nuvarandepass = idb.fetchSingle("Select losenord from agent where losenord = " + "'" + oldpass + "'");
                if (oldpass.equals(nuvarandepass)) {
                    idb.update("Update Agent set losenord = " + "'" + pass + "'" + "where losenord = " + "'" + oldpass + "'");
                    JOptionPane.showMessageDialog(null, "Lösenordet har ändrats");

                } else {
                    JOptionPane.showMessageDialog(null, "Lösenordet matchar inte med det förra lösenordet");
                }

            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel med lösenordet");
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_bytlösenordBTNActionPerformed

    private void tbxBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxBTNActionPerformed
        // TODO add your handling code here:
       String test = huvudFonster.hamtaAnvandare();
        //om agenten är admin så kommer man till adminsidan via knappen annars så kommer man till vanliga agentsidan
        try{
            //String namn = idb.fetchSingle("Select namn from agent where namn = " + "'" + test + "'");
            // Här hämtar den id på den inloggade agenten
            String id = idb.fetchSingle("Select agent_id from agent where namn = " + "'" + test + "'");
            // Konverterar till int
            int convertId = Integer.parseInt(id);
            //If agenten är admin 
            String om = idb.fetchSingle("select agent.ADMINISTRATOR from agent where agent_id = " + "'" + convertId +"'");
            //Om villkorret uppfylls(en agent är admin om det står J i administrator kolumnen)
            if(om.equals("J")){
                AdminFonster tbxAdmin = new AdminFonster(idb);
                tbxAdmin.setVisible(true);
                this.dispose();
            }
            // Annars är det vanliga agentsidan man kommer till
            else{
                AgentInloggad tbx = new AgentInloggad(idb);
                tbx.setVisible(true);
                this.dispose();
                 
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, "Något gick fel");
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_tbxBTNActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bytlösenordBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField oldpassword;
    private javax.swing.JPasswordField passwordnew;
    private javax.swing.JButton tbxBTN;
    // End of variables declaration//GEN-END:variables
}
